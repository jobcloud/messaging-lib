<?xml version="1.0" encoding="UTF-8"?>
<project name="messaging-lib" default="build">
    <import file="php-module-targets.xml"/>
    <property name="php-version" value="7.1" />
    <target name="build"
            depends="disable-xdebug,prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,enable-xdebug,phpunit,disable-xdebug,phpunit-integration,enable-xdebug"/>

    <target name="dev"
            depends="disable-xdebug,phpunit,phpunit-integration,dev-style,enable-xdebug"/>

    <target name="dev-cov"
            depends="enable-xdebug,phpunit-dev,disable-xdebug,dev-style,enable-xdebug"/>

    <target name="dev-clean"
            depends="disable-xdebug,prepare,phpunit,dev-style,enable-xdebug"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build"/>
        <delete dir="/tmp/MessagingLib"/>
        <delete dir="${basedir}/vendor"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/logs/coverage"/>
        <mkdir dir="${basedir}/build/logs/pdepend"/>
        <mkdir dir="${basedir}/vendor"/>

        <echo>basedir: ${basedir}</echo>

        <exec executable="composer">
            <arg value="update"/>
            <arg value="-n"/>
            <arg value="--no-progress"/>
            <arg value="--no-ansi"/>
        </exec>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <exclude name="**/vendor/**" />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="vendor/bin/phploc" failonerror="false">
            <arg value="--count-tests"/>
            <arg value="--log-csv"/>
            <arg value="${basedir}/build/logs/phploc.csv"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="vendor/bin/pdepend" failonerror="false">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/logs/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/logs/pdepend/overview-pyramid.svg"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="vendor/bin/phpmd" failonerror="false">
            <arg path="${basedir}/src"/>
            <arg value="xml"/>
            <arg value="${basedir}/vendor/jobcloud/unity-coding-standards/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="vendor/bin/phpcs" failonerror="false">
            <arg value="--extensions=php"/>
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=${basedir}/vendor/jobcloud/unity-coding-standards/ruleset.xml"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="vendor/bin/phpcpd" failonerror="false">
            <arg value="-n"/>
            <arg value="--log-pmd"/>
            <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpunit" description="Run fast unit tests with PHPUnit without code coverage">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg value="-c"/>
            <arg path="${basedir}/phpunit.xml.dist"/>
            <arg value="--coverage-html=${basedir}/build/logs/coverage"/>
            <arg value="--coverage-clover=${basedir}/build/logs/coverage.xml"/>
            <arg value="--log-junit=${basedir}/build/logs/junit.xml"/>
            <arg value="--testsuite=Unit"/>
        </exec>
    </target>

    <target name="phpunit-integration" description="Run fast integration tests with PHPUnit without code coverage">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg value="-c"/>
            <arg path="${basedir}/phpunit.xml.dist"/>
            <arg value="--testsuite=Integration"/>
        </exec>
    </target>

    <target name="enable-xdebug" description="Enables Xdebug for CLI and FPM" depends="enable-xdebug-cli,enable-xdebug-fpm">
        <echo>enabled xdebug</echo>
    </target>

    <target name="disable-xdebug" description="Disables Xdebug for CLI and FPM" depends="disable-xdebug-cli,disable-xdebug-fpm">
        <echo>disabled xdebug</echo>
    </target>

    <target name="calc-style-violations">
        <exec executable="vendor/bin/phpcs" output="/dev/null" failonerror="false">
            <arg value="--extensions=php"/>
            <arg value="--report-full=${basedir}/build/logs/checkstyle-dev-full.txt"/>
            <arg value="--report-gitblame=${basedir}/build/logs/checkstyle-dev-gitblame.txt"/>
            <arg value="--standard=${basedir}/vendor/jobcloud/unity-coding-standards/ruleset.xml"/>
            <arg path="${basedir}/src"/>
        </exec>
        <loadfile property="report-full" srcFile="${basedir}/build/logs/checkstyle-dev-full.txt" failonerror="false"/>
        <loadfile property="report-gitblame" srcFile="${basedir}/build/logs/checkstyle-dev-gitblame.txt" failonerror="false"/>
        <condition property="style-violations">
            <length file="${basedir}/build/logs/checkstyle-dev-full.txt" when="greater" length="1" />
        </condition>
        <exec executable="vendor/bin/phpmd" failonerror="false">
            <arg path="${basedir}/src"/>
            <arg value="text"/>
            <arg value="${basedir}/vendor/jobcloud/unity-coding-standards/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${basedir}/build/logs/pmd.txt"/>
        </exec>
    </target>

    <target name="dev-style" depends="calc-style-violations" if="style-violations">
        <loadfile property="report-full" srcFile="${basedir}/build/logs/checkstyle-dev-full.txt"/>
        <loadfile property="report-gitblame" srcFile="${basedir}/build/logs/checkstyle-dev-gitblame.txt"/>
        <loadfile property="report-phpmd" srcFile="${basedir}/build/logs/pmd.txt"/>
        <echo>&#xa;&#xa;</echo>
        <echo>+------------------+</echo>
        <echo>|       PHPMD:     |</echo>
        <echo>+------------------+</echo>
        <echo>&#xa;&#xa;</echo>
        <echo>${report-phpmd}</echo>
        <echo>&#xa;&#xa;</echo>
        <echo>+------------------+</echo>
        <echo>|       PHPCS:     |</echo>
        <echo>+------------------+</echo>
        <echo>&#xa;&#xa;</echo>
        <echo>${report-full}</echo>
        <echo>&#xa;&#xa;</echo>
        <echo>${report-gitblame}</echo>
    </target>

    <target name="phpunit-dev" depends="phpunit">
        <property name="pdev-in" value="${basedir}/build/logs/coverage/index.html"/>
        <property name="pdev-out" value="${basedir}/build/logs/coverage/dev-perc.txt"/>
        <property name="pdev-command" value="egrep 'sr-only\&quot;&gt;(.+)%' ${pdev-in} -oh | sed s/sr-only\&quot;\&gt;//"/>
        <exec executable="bash"><arg value="-c"/><arg value="${pdev-command} | head -1 &gt; ${pdev-out}"/></exec>
        <loadfile property="perc1" srcFile="${basedir}/build/logs/coverage/dev-perc.txt"/>
        <exec executable="bash"><arg value="-c"/><arg value="${pdev-command} | head -2 | tail -1 &gt; ${pdev-out}"/></exec>
        <loadfile property="perc2" srcFile="${basedir}/build/logs/coverage/dev-perc.txt"/>
        <exec executable="bash"><arg value="-c"/><arg value="${pdev-command} | head -3 | tail -1 &gt; ${pdev-out}"/></exec>
        <loadfile property="perc3" srcFile="${basedir}/build/logs/coverage/dev-perc.txt"/>
        <echo>&#xa;&#xa;</echo>
        <echo>+------------------+</echo>
        <echo>|     COVERAGE:    |</echo>
        <echo>+------------------+</echo>
        <echo>&#xa;&#xa;</echo>
        <echo>Lines                 : ${perc1}</echo>
        <echo>Functions and Methods : ${perc2}</echo>
        <echo>Classes and Traits    : ${perc3}</echo>
    </target>

</project>
